package com.bertholucci.data.model

import com.google.gson.annotations.SerializedName

class CardsResponse(
    @SerializedName("Basic") val basic: List<CardResponse>?,
    @SerializedName("Classic") val classic: List<CardResponse>?,
    @SerializedName("Hall Of Fame") val hallOfFame: List<CardResponse>?,
    @SerializedName("Missions") val missions: List<CardResponse>?,
    @SerializedName("Naxxramas") val naxxramas: List<CardResponse>?,
    @SerializedName("Goblin Vs Gnomes") val goblinVsGnomes: List<CardResponse>?,
    @SerializedName("Blackrock Mountain") val blackrockMountain: List<CardResponse>?,
    @SerializedName("The Grand Tournament") val theGrandTournament: List<CardResponse>?,
    @SerializedName("Credits") val credits: List<CardResponse>?,
    @SerializedName("Hero Skins") val heroSkins: List<CardResponse>?,
    @SerializedName("Tavern Brawl") val tavernBrawl: List<CardResponse>?,
    @SerializedName("The League Of Explorer") val theLeagueOfExplorer: List<CardResponse>?,
    @SerializedName("Whispers of The Old Gods") val whispersOfTheOldGoods: List<CardResponse>?,
    @SerializedName("One Night In Karazhan") val oneNightInKarazhan: List<CardResponse>?,
    @SerializedName("Mean Street Of Gadgetzan") val meanStreetsOfGadgetzan: List<CardResponse>?,
    @SerializedName("Journey to Un'Goro") val journeyToUnGoro: List<CardResponse>?,
    @SerializedName("Knights of the Frozen Throne") val knightsOfTheFrozenThrone: List<CardResponse>?,
    @SerializedName("Kobolds & Catacombs") val koboldsAndCatacombs: List<CardResponse>?,
    @SerializedName("The Witchwood") val theWitchwood: List<CardResponse>?,
    @SerializedName("The Boomsday Project") val theBoomsdayProject: List<CardResponse>?,
    @SerializedName("Rastakhan's Rumble") val rastakhansRumble: List<CardResponse>?,
    @SerializedName("Rise of Shadows") val riseOfShadows: List<CardResponse>?,
    @SerializedName("Taverns of Time") val tavernsOfTime: List<CardResponse>?,
    @SerializedName("Saviors of Uldum") val saviorsOfUldum: List<CardResponse>?,
    @SerializedName("Descent of Dragons") val descentOfDragons: List<CardResponse>?,
    @SerializedName("Galakrond's Awakening") val galakrondsAwakening: List<CardResponse>?,
    @SerializedName("Ashes of Outland") val ashesOfOutland: List<CardResponse>?,
    @SerializedName("Wild Event") val wildEvent: List<CardResponse>?,
    @SerializedName("Scholomance Academy") val scholmanceAcademy: List<CardResponse>?,
    @SerializedName("Battlegrounds") val battlegrounds: List<CardResponse>?,
    @SerializedName("Demon Hunter Initiate") val demonHunterInitiate: List<CardResponse>?,
    @SerializedName("Madness At The Darkmoon Faire") val madnessAtTheDarkmoonFaire: List<CardResponse>?,
    @SerializedName("Forged in the Barrens") val forgedInTheBarrens: List<CardResponse>?,
    @SerializedName("Legacy") val legacy: List<CardResponse>?,
    @SerializedName("Core") val core: List<CardResponse>?,
    @SerializedName("Vanilla") val vanilla: List<CardResponse>?,
    @SerializedName("Wailing Caverns") val wailingCaverns: List<CardResponse>?,
    @SerializedName("United in Stormwind") val unitedInStormwind: List<CardResponse>?,
    @SerializedName("Mercenaries") val mercenaries: List<CardResponse>?,
    @SerializedName("Fractured in Alterac Valley") val fracturedInAlteracValley: List<CardResponse>?,
    @SerializedName("Voyage to the Sunken City") val voyageToTheSunkenCity: List<CardResponse>?,
    @SerializedName("Unknown") val unknown: List<CardResponse>?,
    @SerializedName("Murder at Castle Nathria") val murderAtCastleNathria: List<CardResponse>?,
    @SerializedName("March of the Lich King") val marchOfTheLichKing: List<CardResponse>?,
    @SerializedName("Path of Arthas") val pathOfArthas: List<CardResponse>?
)

class CardResponse(
    @SerializedName("cardId") val id: String?,
    @SerializedName("img") val image: String?,
    @SerializedName("name") val name: String?,
    @SerializedName("flavor") val flavor: String?,
    @SerializedName("text") val text: String?,
    @SerializedName("playerClass") val playerClass: String?,
    @SerializedName("cardSet") val cardSet: String?,
    @SerializedName("type") val type: String?,
    @SerializedName("rarity") val rarity: String?,
    @SerializedName("faction") val faction: String?,
    @SerializedName("cost") val cost: String?,
    @SerializedName("attack") val attack: String?,
    @SerializedName("health") val health: String?
)